// Generated by Xata Codegen 0.29.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Post",
    columns: [
      { name: "content", type: "text" },
      { name: "media", type: "json" },
      { name: "author", type: "link", link: { table: "User" } },
    ],
    revLinks: [{ column: "post_id", table: "Like" }],
  },
  {
    name: "Comment",
    columns: [
      { name: "post_id", type: "string" },
      { name: "content", type: "string" },
      { name: "user_id", type: "string" },
    ],
  },
  {
    name: "User",
    columns: [
      { name: "clerk_id", type: "string", unique: true },
      { name: "email", type: "string", unique: true },
      { name: "username", type: "string", unique: true },
      { name: "first_name", type: "string" },
      { name: "last_name", type: "string" },
      { name: "profile_picture", type: "string" },
    ],
    revLinks: [
      { column: "author", table: "Post" },
      { column: "user_id", table: "Like" },
    ],
  },
  {
    name: "Like",
    columns: [
      { name: "user_id", type: "link", link: { table: "User" } },
      { name: "post_id", type: "link", link: { table: "Post" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Post = InferredTypes["Post"];
export type PostRecord = Post & XataRecord;

export type Comment = InferredTypes["Comment"];
export type CommentRecord = Comment & XataRecord;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type Like = InferredTypes["Like"];
export type LikeRecord = Like & XataRecord;

export type DatabaseSchema = {
  Post: PostRecord;
  Comment: CommentRecord;
  User: UserRecord;
  Like: LikeRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Jan-Danielle-Plaza-s-workspace-oti195.us-east-1.xata.sh/db/chuwie",
  branch: "main",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
